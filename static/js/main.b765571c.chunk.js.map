{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","components/Card/index.js","components/Footer/index.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","this","props","score","highScore","Component","Jumbotron","Card","onClick","alt","name","src","image","Footer","href","App","state","Images","Clicked","handleClick","event","index","target","lastClicked","_this","indexOf","console","log","concat","setState","sort","b","Math","random","alert","push","_this2","components_Navbar","components_Jumbotron","map","images","components_Card","id","key","components_Footer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yxCAgBeA,0LAVX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,6BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,WAAuCC,KAAKC,MAAMC,MAAlD,mBAAyEF,KAAKC,MAAME,mBANvEC,cCYNC,SAZG,kBAChBT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,gBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAAb,6GCGSO,SAPF,SAAAL,GAAK,OAChBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKS,QAASN,EAAMM,QAASR,UAAU,eAAeS,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,WCkBvEC,SAlBA,kBACbhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,+CAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,KAAGe,KAAK,6CAAR,UADF,MAGIjB,EAAAC,EAAAC,cAAA,KAAGe,KAAK,oCAAR,yBCmHGC,oNAhHbC,MAAQ,CACNC,SACAC,QAAS,GACTf,MAAO,EACPC,UAAW,KAIbe,YAAc,SAAAC,GAGZ,IAAMC,EAAQD,EAAME,OAAOb,IACrBc,EAAcC,EAAKR,MAAME,QAAQO,QAAQJ,IAAU,EAGzDK,QAAQC,IAAR,gBAAAC,OAA4BL,IAGxBA,GAGFC,EAAKK,SAAS,CAGZZ,OAAQO,EAAKR,MAAMC,OAAOa,KAAK,SAAChC,EAAGiC,GACjC,MAAO,GAAMC,KAAKC,WAIpBf,QAAS,GAGTf,MAAO,IAIT+B,MAAM,yBAMNV,EAAKK,SACH,CAGEZ,OAAQO,EAAKR,MAAMC,OAAOa,KAAK,SAAChC,EAAGiC,GACjC,MAAO,GAAMC,KAAKC,WAIpBV,YAAaC,EAAKR,MAAME,QAAQiB,KAAKd,GAGrClB,MAAOqB,EAAKR,MAAMb,MAAQ,GAG5B,WAG2B,KAArBqB,EAAKR,MAAMb,QAGb+B,MAAM,YAGNV,EAAKK,SAAS,CAGZZ,OAAQO,EAAKR,MAAMC,OAAOa,KAAK,SAAChC,EAAGiC,GACjC,MAAO,GAAMC,KAAKC,WAIpBV,YAAa,GAGbpB,MAAO,gFAQV,IAAAiC,EAAAnC,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsC,EAAD,CACElC,MAAOF,KAAKe,MAAMb,MAClBC,UAAWH,KAAKe,MAAMZ,YAExBP,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZC,KAAKe,MAAMC,OAAOsB,IAAI,SAAAC,GAAM,OAC3B3C,EAAAC,EAAAC,cAAC0C,EAAD,CACEzC,UAAU,UACV0C,GAAIF,EAAOE,GACXC,IAAKH,EAAOE,GACZhC,KAAM8B,EAAO9B,KACbE,MAAO4B,EAAO5B,MACdJ,QAAS4B,EAAKjB,iBAIpBtB,EAAAC,EAAAC,cAAC6C,EAAD,cA5GUvC,cCXlBwC,IAASC,OACPjD,EAAAC,EAAAC,cAACgD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.b765571c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './style.css'\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <nav>\r\n        <div className='left-indent'>MemoReact</div>\r\n        <div className='centered'>Click any image to start!</div>\r\n        <div className='right-indent'>Score : {this.props.score} | High Score : {this.props.highScore}</div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Jumbotron = () => (\r\n  <div>\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-4 text-center\">Clicky Game!</h1>\r\n      <p className=\"directions lead text-center\">\r\n        Test your memory, click each image only once, clicking the same image twice will result in game over.\r\n        </p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nexport default Jumbotron","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Card = props => (\r\n  <div className='card'>\r\n    <img onClick={props.onClick} className='card-img-top' alt={props.name} src={props.image} />\r\n  </div>\r\n);\r\n\r\n\r\nexport default Card","// react\r\nimport React from 'react'\r\n\r\n// styling\r\nimport './style.css'\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <footer className='custom'>\r\n      <div>\r\n        <h5 className='leftSide'>\r\n          Zelda Memory Game by Niko Roberts &#169; 2019\r\n          </h5>\r\n        <h5 className='rightSide'>\r\n          <a href='https://github.com/dvld/react-memory-game'>GitHub</a>\r\n          |||\r\n            <a href='www.linkedin.com/in/niko-roberts'>LinkedIn</a>\r\n        </h5>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n);\r\n\r\n\r\nexport default Footer","\r\n// react\r\nimport React, { Component } from 'react';\r\n\r\n// components\r\nimport Navbar from './components/Navbar';\r\nimport Jumbotron from './components/Jumbotron';\r\nimport Card from './components/Card';\r\nimport Footer from './components/Footer';\r\n\r\n// data\r\nimport Images from './images.json';\r\n\r\n// styling\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\r\n  // initial state\r\n  state = {\r\n    Images,\r\n    Clicked: [],\r\n    score: 0,\r\n    highScore: 0\r\n  };\r\n\r\n  // what happens when cards are clicked\r\n  handleClick = event => {\r\n\r\n    // variables\r\n    const index = event.target.alt;\r\n    const lastClicked = this.state.Clicked.indexOf(index) > -1;\r\n\r\n    // test\r\n    console.log(`Last clicked ${lastClicked}`);\r\n\r\n    // if the 'lastClicked' image already exists within in the 'Clicked' array\r\n    if (lastClicked) {\r\n\r\n      // set state to...\r\n      this.setState({\r\n\r\n        // rearrange images\r\n        Images: this.state.Images.sort((a, b) => {\r\n          return 0.5 - Math.random();\r\n        }),\r\n\r\n        // empty the 'Clicked' array\r\n        Clicked: [],\r\n\r\n        // reset 'score' to zero\r\n        score: 0,\r\n      });\r\n\r\n      // alert loss\r\n      alert('Game over! Try Again');\r\n\r\n      // otherwise (image does not already exist in 'Clicked array)\r\n    } else {\r\n\r\n      // set state to...\r\n      this.setState(\r\n        {\r\n\r\n          // rearrange images\r\n          Images: this.state.Images.sort((a, b) => {\r\n            return 0.5 - Math.random();\r\n          }),\r\n\r\n          // push 'lastClicked' image to 'Clicked' array\r\n          lastClicked: this.state.Clicked.push(index),\r\n\r\n          // increment 'score'\r\n          score: this.state.score + 1,\r\n        },\r\n\r\n        () => {\r\n\r\n        // if 'score' reaches 12\r\n          if (this.state.score === 12) {\r\n\r\n            // alert win\r\n            alert('You win!');\r\n\r\n            // set state to...\r\n            this.setState({\r\n\r\n              // rearrange images\r\n              Images: this.state.Images.sort((a, b) => {\r\n                return 0.5 - Math.random();\r\n              }),\r\n\r\n              // empty 'lastClicked' array\r\n              lastClicked: [],\r\n\r\n              // reset 'score' to zero\r\n              score: 0\r\n            });\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n        />\r\n        <Jumbotron />\r\n        <div className='card-area'>\r\n          {this.state.Images.map(images => (\r\n            <Card\r\n              className='wrapper'\r\n              id={images.id}\r\n              key={images.id}\r\n              name={images.name}\r\n              image={images.image}\r\n              onClick={this.handleClick}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}